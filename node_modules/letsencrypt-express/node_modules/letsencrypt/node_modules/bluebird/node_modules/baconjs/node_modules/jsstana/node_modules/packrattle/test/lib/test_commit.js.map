{"version":3,"sources":["../src/test_commit.js"],"names":[],"mappings":"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","file":"test_commit.js","sourcesContent":["\"use strict\";\n\nconst pr = require(\"../../lib\");\nconst util = require(\"util\");\n\nrequire(\"should\");\nrequire(\"source-map-support\").install();\n\ndescribe(\"Parser.commit\", () => {\n  it(\"can commit to an alternative\", () => {\n    const p = pr([\n      pr(\"!\").commit(),\n      pr(/\\d+/).onFail(\"! must be a number\")\n    ]).or([ \"@\", /\\d+/ ]).onMatch(a => [ a[0], a[1][0] ]);\n    let rv = p.execute(\"!3\")\n    rv.ok.should.equal(true);\n    rv.value.should.eql([ \"!\", \"3\" ]);\n    rv = p.execute(\"@55\");\n    rv.ok.should.equal(true);\n    rv.value.should.eql([ \"@\", \"55\" ]);\n    rv = p.execute(\"!ok\");\n    rv.ok.should.equal(false);\n    rv.value.should.eql(\"! must be a number\");\n    rv = p.execute(\"@ok\");\n    rv.ok.should.equal(false);\n    rv.value.should.not.eql(\"! must be a number\");\n  });\n\n  it(\"aborts nested alternatives\", () => {\n    const p = pr.alt(\n      [\n        /\\d+/,\n        pr.alt(\n          [ pr(\"!\").commit(), \"0\" ],\n          /[!a-z0-9]+/\n        )\n      ],\n      [ \"2\", \"!\", /\\d+/ ]\n    );\n    const rv = p.execute(\"2!9\");\n    rv.ok.should.equal(false);\n    rv.value.should.match(/Expected '0'/);\n  });\n\n  it(\"is remembered through a chain\", () => {\n    const p = pr.alt(\n      [ pr(\"!\").commit(), \"x\", \"y\", /\\d+/ ],\n      /.xyz/\n    );\n    const rv = p.execute(\"!xyz\");\n    rv.ok.should.equal(false);\n  });\n\n  it(\"is remembered through nested chains\", () => {\n    const p = pr.alt(\n      pr.seq(\n        [ pr(\"!\").commit(), \"x\" ],\n        \"y\"\n      ),\n      /.xz/\n    );\n    const rv = p.execute(\"!xz\");\n    rv.ok.should.equal(false);\n  });\n\n  it(\"is remembered through an exception\", () => {\n    const p = pr.alt(\n      pr([ pr(\"!\").commit(), \"x\", \"y\" ]).onMatch(m => {\n        throw new Error(\"Y!\");\n      }),\n      /.xyz/\n    );\n    const rv = p.execute(\"!xyz\");\n    rv.ok.should.equal(false);\n  });\n\n  it(\"doesn't persist through new alternatives\", () => {\n    const p = pr.alt(\n      pr([ pr(\"b\").commit(), \"x\", pr.alt(\n        /[a-z]z/,\n        pr([ pr(\"m\").commit(), \"q\" ]),\n        /[a-z]a/\n      )]),\n      /[a-z]/\n    );\n    let rv = p.execute(\"bxma\");\n    rv.ok.should.equal(false);\n    rv = p.execute(\"bxmq\");\n    rv.ok.should.equal(true);\n  });\n\n  it(\"works in an optional branch\", () => {\n    const p = pr([ \"a\", pr([ pr(\"zz\").commit(), \"q\" ]).optional(), /[a-z]{3}/ ]);\n    const rv = p.execute(\"azzc\");\n    rv.ok.should.equal(false);\n  });\n});\n"]}