{"version":3,"sources":["../src/test_promise_set.js"],"names":[],"mappings":";;;;wCAAuB,kCAAkC;;;;AAEzD,OAAO,CAAC,QAAQ,CAAC,CAAC;AAClB,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;;AAExC,QAAQ,CAAC,YAAY,EAAE,YAAM;AAC3B,IAAE,CAAC,qCAAqC,EAAE,UAAA,IAAI,EAAI;AAChD,QAAM,CAAC,GAAG,2CAAgB,CAAC;AAC3B,KAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACV,KAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACV,OAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACjB,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,IAAE,CAAC,uCAAuC,EAAE,UAAA,IAAI,EAAI;AAClD,QAAM,CAAC,GAAG,2CAAgB,CAAC;AAC3B,KAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACV,OAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACjB,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;AACH,KAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;GACX,CAAC,CAAC;;AAEH,IAAE,CAAC,yBAAyB,EAAE,UAAA,IAAI,EAAI;AACpC,QAAM,CAAC,GAAG,2CAAgB,CAAC;;AAE3B,KAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACT,KAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAET,QAAM,OAAO,GAAG,EAAE,CAAC;AACnB,KAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACV,aAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChB,UAAI,CAAC,IAAI,CAAC,EAAE;AACV,eAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC;AACnC,YAAI,EAAE,CAAC;OACR;KACF,CAAC,CAAC;;AAEH,KAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACT,KAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACV,CAAC,CAAC;;AAEH,IAAE,CAAC,4BAA4B,EAAE,YAAM;AACrC,QAAM,CAAC,GAAG,2CAAgB,CAAC;AAC3B,QAAI,KAAK,GAAG,CAAC,CAAC;;AAEd,KAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACV,WAAK,IAAI,CAAC,CAAC;KACZ,CAAC,CAAC;AACH,KAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACV,WAAK,IAAI,CAAC,CAAC;KACZ,CAAC,CAAC;;AAEH,KAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACX,KAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACV,WAAK,IAAI,CAAC,CAAC;KACZ,CAAC,CAAC;;AAEH,SAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACrB,CAAC,CAAA;CACH,CAAC,CAAC","file":"test_promise_set.js","sourcesContent":["import PromiseSet from \"../../lib/packrattle/promise_set\";\n\nrequire(\"should\");\nrequire(\"source-map-support\").install();\n\ndescribe(\"PromiseSet\", () => {\n  it(\"sets one value and then receives it\", done => {\n    const p = new PromiseSet();\n    p.add(23);\n    p.then(v => {\n      v.should.eql(23);\n      done();\n    });\n  });\n\n  it(\"notifies an early listener of a value\", done => {\n    const p = new PromiseSet();\n    p.then(v => {\n      v.should.eql(23);\n      done();\n    });\n    p.add(23);\n  });\n\n  it(\"handles multiple values\", done => {\n    const p = new PromiseSet();\n\n    p.add(1);\n    p.add(2);\n\n    const results = [];\n    p.then(v => {\n      results.push(v);\n      if (v == 4) {\n        results.should.eql([ 1, 2, 3, 4 ]);\n        done();\n      }\n    });\n\n    p.add(3);\n    p.add(4);\n  });\n\n  it(\"handles multiple listeners\", () => {\n    const p = new PromiseSet();\n    let count = 0;\n\n    p.then(v => {\n      count += 1;\n    });\n    p.then(v => {\n      count += 1;\n    });\n\n    p.add(100);\n    p.then(v => {\n      count += 1;\n    });\n\n    count.should.eql(3);\n  })\n});\n"]}