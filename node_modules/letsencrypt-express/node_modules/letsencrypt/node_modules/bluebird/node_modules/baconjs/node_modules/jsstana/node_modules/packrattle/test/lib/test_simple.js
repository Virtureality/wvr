"use strict";

var pr = require("../../lib");
var util = require("util");

require("should");
require("source-map-support").install();

describe("simple parsers", function () {
  it("reject", function () {
    (function () {
      return pr.reject.run("");
    }).should["throw"](/rejected/);
  });

  it("succeed", function () {
    pr.succeed("foo").run("").should.eql("foo");
  });

  it("end", function () {
    (pr.end.run("") == null).should.eql(true);
    (function () {
      return pr.end.run("a");
    }).should["throw"](/end/);
  });

  it("literal string", function () {
    var p = pr.string("hello");
    (function () {
      return p.run("cat");
    }).should["throw"](/hello/);
    var rv = p.execute("hellon");
    rv.state.pos.should.eql(5);
    rv.value.should.eql("hello");
  });

  it("consumes the whole string", function () {
    var p = pr.string("hello").consume();
    var rv = p.execute("hello");
    rv.state.pos.should.eql(5);
    rv.value.should.eql("hello");
    (function () {
      return p.run("hello!");
    }).should["throw"](/end/);
  });

  it("regex", function () {
    var p = pr.regex(/h(i)?/);
    (function () {
      return p.run("no");
    }).should["throw"](/h\(i\)\?/);
    var rv = p.execute("hit");
    rv.state.pos.should.equal(2);
    rv.value[0].should.eql("hi");
    rv.value[1].should.eql("i");
  });
});
//# sourceMappingURL=test_simple.js.map