{"version":3,"sources":["../src/test_repeat.js"],"names":[],"mappings":"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","file":"test_repeat.js","sourcesContent":["\"use strict\";\n\nconst pr = require(\"../../lib\");\nconst util = require(\"util\");\n\nrequire(\"should\");\nrequire(\"source-map-support\").install();\n\nfunction matchSpan(m) {\n  const span = m.state.span()\n  return [ m.value, span.start, span.end ];\n}\n\ndescribe(\"Parser.repeat\", () => {\n  it(\"0 or more\", () => {\n    const p = pr.repeat(\"hi\");\n    matchSpan(p.consume().execute(\"\")).should.eql([ [], 0, 1 ]);\n    matchSpan(p.consume().execute(\"hi\")).should.eql([ [ \"hi\" ], 0, 2 ]);\n    matchSpan(p.consume().execute(\"hihihi\")).should.eql([ [ \"hi\", \"hi\", \"hi\" ], 0, 6 ]);\n  });\n\n  it(\"2 or 3\", () => {\n    const p = pr.repeat(\"hi\", { min: 2, max: 3 });\n    (() => p.run(\"hi\")).should.throw(/'hi'\\{2, 3}/);\n    matchSpan(p.consume().execute(\"hihi\")).should.eql([ [ \"hi\", \"hi\" ], 0, 4 ]);\n    matchSpan(p.consume().execute(\"hihihi\")).should.eql([ [ \"hi\", \"hi\", \"hi\" ], 0, 6 ]);\n    (() => p.run(\"hihihihi\")).should.throw(/end/);\n  });\n\n  it(\"isn't always greedy\", () => {\n    const p = pr([ pr.repeat(\"hi\"), \"hip\" ]);\n    p.run(\"hihihip\").should.eql([ [ \"hi\", \"hi\" ], \"hip\" ]);\n  });\n\n  it(\"nested\", () => {\n    const p = pr([ pr.repeat([ \"hi\", pr.repeat(\"!\") ]), /[x]+/ ]).map(match => match[0]);\n    const rv = p.consume().execute(\"hi!hi!!!hix\");\n    rv.state.pos.should.equal(11);\n    rv.value.should.eql([\n      [ \"hi\", [ \"!\" ] ],\n      [ \"hi\", [ \"!\", \"!\", \"!\" ] ],\n      [ \"hi\", [] ]\n    ]);\n  });\n\n  it(\"with whitespace ignoring\", () => {\n    const p = pr([ pr.repeatIgnore(\"hi\", /\\s+/), \"!\" ]).map(match => match[0]);\n    matchSpan(p.execute(\"hi  hihi!\")).should.eql([ [ \"hi\", \"hi\", \"hi\" ], 0, 9 ]);\n  });\n\n  it(\"and honors nested drops\", () => {\n    let p = pr(\"123\").drop().repeat();\n    let rv = p.execute(\"123123\");\n    rv.ok.should.equal(true);\n    rv.value.should.eql([]);\n    p = pr(\"123\").drop().times(2);\n    rv = p.execute(\"123123\");\n    rv.ok.should.equal(true);\n    rv.value.should.eql([]);\n  });\n\n  it(\"but throws an error if there's no progress\", () => {\n    const p = pr.repeat(\"\");\n    (() => p.execute(\"?\")).should.throw(/isn't making progress/);\n  });\n\n  it(\"repeatSeparated too\", () => {\n    const p = pr.repeatSeparated(pr(/\\d+/).map(m => m[0]), \",\", { min: 1, max: 3 }).consume();\n    matchSpan(p.execute(\"3\")).should.eql([ [ \"3\" ], 0, 1 ]);\n    (() => p.run(\"3,\")).should.throw(/end/);\n    matchSpan(p.execute(\"3,4\")).should.eql([ [ \"3\", \"4\" ], 0, 3 ]);\n    matchSpan(p.execute(\"3,40\")).should.eql([ [ \"3\", \"40\" ], 0, 4 ]);\n    matchSpan(p.execute(\"3,40,5\")).should.eql([ [ \"3\", \"40\", \"5\" ], 0, 6 ]);\n    (() => p.run(\"3,40,5,6\")).should.throw(/end/);\n  });\n\n  it(\"aborts if a repeating phrase aborts\", () => {\n    const ws = pr(/\\s*/).drop();\n    const operand = pr(/\\d+/).onMatch(m => m[0]).onFail(\"Expected operand\");\n    const operator = pr([ ws, pr.alt(\"+\", \"-\"), ws ]).commit().onMatch(m => m[0]);\n    const algebra = pr.reduce(operand, operator, {\n      first: x => x,\n      next: (left, op, right) => ({ binary: op, left, right })\n    });\n\n    algebra.run(\"3 + 2\").should.eql({ binary: \"+\", left: \"3\", right: \"2\" });\n\n    try {\n      algebra.run(\"3 +\");\n      throw new Error(\"nope\");\n    } catch (error) {\n      error.message.should.eql(\"Expected operand\");\n      error.span.start.should.eql(3);\n      error.span.end.should.eql(4);\n    }\n\n    try {\n      algebra.run(\"3 + 5 +\");\n      throw new Error(\"nope\");\n    } catch (error) {\n      error.message.should.eql(\"Expected operand\");\n      error.span.start.should.eql(7);\n      error.span.end.should.eql(8);\n    }\n  });\n});\n"]}