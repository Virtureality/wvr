"use strict";

var pr = require("../../lib");
var util = require("util");

require("should");
require("source-map-support").install();

describe("Parser.filter", function () {
  it("matches with a condition", function () {
    var p = pr.regex(/\d+/).matchIf(function (match) {
      return parseInt(match[0], 10) % 2 == 0;
    }, "Expected an even number");
    (function () {
      return p.run("103");
    }).should["throw"](/even number/);
    var m = p.execute("104");
    m.state.pos.should.eql(3);
    m.value[0].should.eql("104");
  });

  it("can be called filter", function () {
    // only allow numbers when the length is even.
    var p = pr.regex(/\d+/).filter(function (match, span) {
      return span.endLine.xpos % 2 == 0;
    }, "Expected an even length!");
    (function () {
      return p.run("103");
    }).should["throw"](/even length/);
    p.run("14")[0].should.eql("14");
  });

  it("builds a good default message", function () {
    var p = pr.regex(/\d+/).filter(function (match, span) {
      return span.endLine.xpos % 2 == 0;
    });
    (function () {
      return p.run("103");
    }).should["throw"](/Expected filter/);
  });
});
//# sourceMappingURL=test_filter.js.map