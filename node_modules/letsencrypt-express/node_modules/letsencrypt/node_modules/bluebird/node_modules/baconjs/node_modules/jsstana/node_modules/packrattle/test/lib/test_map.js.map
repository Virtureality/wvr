{"version":3,"sources":["../src/test_map.js"],"names":[],"mappings":"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","file":"test_map.js","sourcesContent":["\"use strict\";\n\nimport pr, { string } from \"../../lib\";\n\nrequire(\"should\");\nrequire(\"source-map-support\").install();\n\ndescribe(\"Parser.map\", () => {\n  it(\"transforms a match\", () => {\n    const p = pr(\"hello\").map((value, state) => [ value.toUpperCase(), state.start, state.end ]);\n    (() => p.run(\"cat\")).should.throw(/hello/);\n    p.execute(\"hellon\").value.should.eql([ \"HELLO\", 0, 5 ]);\n  });\n\n  it(\"transforms a match into a constant\", () => {\n    const p = pr(\"hello\").map(\"yes\");\n    const rv = p.execute(\"hello\");\n    rv.value.should.eql(\"yes\");\n    rv.state.pos.should.equal(5);\n  });\n\n  it(\"transforms a match into a failure on exception\", () => {\n    const p = pr(\"hello\").map(value => {\n      throw new Error(\"utter failure\");\n    });\n    (() => p.run(\"hello\")).should.throw(/utter failure/);\n  });\n\n  it(\"onFail\", () => {\n    const p = string(\"hello\").onFail(\"Try a greeting.\");\n    (() => p.run(\"cat\")).should.throw(\"Try a greeting.\");\n    p.execute(\"hellon\").value.should.eql(\"hello\");\n  });\n\n\n  // ----- monad tests\n\n  const a = \"foo\";\n  const m = pr(\"foo\");\n  const f = s => pr(s + \"bar\");\n  const g = s => pr(s + \"baz\");\n\n  function shouldBeIdentical(p1, p2, input) {\n    const rv1 = p1.execute(input);\n    const rv2 = p2.execute(input);\n    rv1.ok.should.equal(true);\n    rv2.ok.should.equal(true);\n    rv1.value.should.equal(rv2.value);\n  }\n\n  it(\"satisfies monad left identity\", () => {\n    const p1 = pr.succeed(a).map(f);\n    const p2 = f(a);\n    shouldBeIdentical(p1, p2, \"foobar\");\n  });\n\n  it(\"satisfies monad right identity\", () => {\n    const p1 = m.map(pr.succeed);\n    const p2 = m;\n    shouldBeIdentical(p1, p2, \"foo\");\n  });\n\n  it(\"satisfies monad associativity\", () => {\n    const p1 = m.map(f).map(g);\n    const p2 = m.map(s => f(s).map(g));\n    shouldBeIdentical(p1, p2, \"foofoobarfoobarbaz\");\n  });\n\n  it(\"fails if a nested parser fails\", () => {\n    const p = m.map(() => pr.reject.onFail(\"no foo\"));\n    const rv = p.execute(\"foo\");\n    rv.ok.should.equal(false);\n    rv.value.should.equal(\"no foo\");\n  });\n});\n"]}