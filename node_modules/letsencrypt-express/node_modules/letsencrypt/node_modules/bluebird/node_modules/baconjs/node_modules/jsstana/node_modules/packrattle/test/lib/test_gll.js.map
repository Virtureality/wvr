{"version":3,"sources":["../src/test_gll.js"],"names":[],"mappings":"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","file":"test_gll.js","sourcesContent":["\"use strict\";\n\nconst pr = require(\"../../lib\");\nconst util = require(\"util\");\n\nrequire(\"should\");\nrequire(\"source-map-support\").install();\n\ndescribe(\"Parser GLL flow\", () => {\n  it(\"balances parens\", () => {\n    const p = pr.alt(pr([ \"(\", () => p, \")\" ]).onMatch(x => \":\" + x[1]), \"x\", \"\");\n    const pc = p.consume();\n    pc.execute(\"(x)\").value.should.eql(\":x\");\n    pc.execute(\"((x))\").value.should.eql(\"::x\");\n    pc.execute(\"((x)\").ok.should.eql(false);\n    pc.execute(\"(x))\").ok.should.eql(false);\n  });\n\n  it(\"accepts doubles\", () => {\n    const p = pr.alt([ () => p, () => p ], \"qx\");\n    const pc = p.consume();\n    pc.execute(\"qx\").value.should.eql(\"qx\");\n    pc.execute(\"qxqx\").value.should.eql([ \"qx\", \"qx\" ]);\n    pc.execute(\"qxqxqx\").value.should.eql([ [ \"qx\", \"qx\" ], \"qx\" ]);\n  });\n\n  it(\"tracks a bunch of leading zeros\", () => {\n    // 0 p | \\d\n    const p = pr.alt([ \"0\", () => p ], pr(/\\d/).onMatch(n => n[0]));\n    const pc = p.consume();\n    pc.execute(\"9\").value.should.eql(\"9\");\n    pc.execute(\"09\").value.should.eql([ \"0\", \"9\" ]);\n    pc.execute(\"009\").value.should.eql([ \"0\", [ \"0\", \"9\" ] ]);\n    pc.execute(\"0009\").value.should.eql([ \"0\", [ \"0\", [\"0\", \"9\" ] ] ]);\n  });\n\n  it(\"left-recurses\", () => {\n    // p p $ | x\n    const p = pr.alt([ () => p, () => p, \"$\" ], \"x\");\n    const pc = p.consume();\n    pc.execute(\"x\").value.should.eql(\"x\");\n    pc.execute(\"xx$\").value.should.eql([ \"x\", \"x\", \"$\" ]);\n    pc.execute(\"xx$xx$$\").value.should.eql([ [ \"x\", \"x\", \"$\" ], [ \"x\", \"x\", \"$\" ], \"$\" ]);\n    pc.execute(\"xx$xx$\").ok.should.eql(false);\n  });\n\n  it(\"adds numbers\", () => {\n    // p + p | \\d+\n    const p = pr.alt(\n      pr([ () => p, \"+\", () => p ]).onMatch(x => x[0] + x[2]),\n      pr(/\\d+/).onMatch(x => parseInt(x, 10))\n    );\n    const pc = p.consume();\n    pc.execute(\"23\").value.should.eql(23);\n    pc.execute(\"2+3\").value.should.eql(5);\n    pc.execute(\"23+100+9\").value.should.eql(132);\n  });\n});\n"]}