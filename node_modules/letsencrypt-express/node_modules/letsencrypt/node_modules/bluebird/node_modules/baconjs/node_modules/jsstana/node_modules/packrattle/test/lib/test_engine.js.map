{"version":3,"sources":["../src/test_engine.js"],"names":[],"mappings":"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","file":"test_engine.js","sourcesContent":["\"use strict\";\n\nconst pr = require(\"../../lib\");\nconst util = require(\"util\");\n\nrequire(\"should\");\nrequire(\"source-map-support\").install();\n\ndescribe(\"Engine\", () => {\n  describe(\"implicitly\", () => {\n    it(\"turns strings into parsers\", () => {\n      const p = pr.chain(\"abc\", \"123\", (a, b) => b + a);\n      p.run(\"abc123\").should.eql(\"123abc\");\n    });\n\n    it(\"turns regexes into parsers\", () => {\n      const p = pr.chain(\"wut\", /\\d+/, (a, b) => a + \":\" + b[0]);\n      p.run(\"wut999\").should.eql(\"wut:999\");\n    });\n\n    it(\"strings together a chained sequence\", () => {\n      const p = [ \"abc\", pr.drop(/\\d+/), \"xyz\" ];\n      const m = pr(p).execute(\"abc11xyz\");\n      m.value.should.eql([ \"abc\", \"xyz\" ]);\n      m.state.pos.should.eql(8);\n    });\n  });\n\n  describe(\"lazily resolves\", () => {\n    it(\"a nested parser\", () => {\n      const p = pr.chain(pr.string(\":\"), () => pr.regex(/\\w+/), (a, b) => [ a, b ]);\n      const rv = p.execute(\":hello\")\n      rv.state.pos.should.equal(6);\n      rv.value[0].should.eql(\":\");\n      rv.value[1][0].should.eql(\"hello\");\n    });\n\n    it(\"only once\", () => {\n      let count = 0;\n      const lazy = () => {\n        count++;\n        return pr.regex(/\\w+/);\n      };\n      const p1 = pr.chain(\":\", lazy, (a, b) => [ a, b[0].toUpperCase() ]);\n      const p2 = pr.chain(\":h\", lazy, (a, b) => [ a, b[0].toUpperCase() ]);\n      const p = pr.alt(pr.chain(p1, \"?\", (a, b) => b), p2);\n\n      p.run(\":hello\").should.eql([ \":h\", \"ELLO\" ]);\n      count.should.equal(1);\n      p.run(\":g?\").should.eql(\"?\");\n      count.should.equal(1);\n      p.run(\":howdy\").should.eql([ \":h\", \"OWDY\" ]);\n      count.should.equal(1);\n    });\n\n    it(\"supports drop for lazy parsers\", () => {\n      const p = pr.drop(() => \"abc\");\n      const m = p.execute(\"abc\");\n      (m.value == null).should.eql(true);\n      m.state.pos.should.eql(3);\n    });\n  });\n\n  it(\"only executes a parser once per string/position\", () => {\n    let count = 0;\n\n    const dupe = pr(\"dupe\").onMatch(x => {\n      count++;\n      return x;\n    });\n    const p = pr.alt(\n      pr.chain(dupe, \"1\", (a, b) => b),\n      pr.chain(dupe, \"2\", (a, b) => b)\n    );\n\n    p.run(\"dupe2\").should.eql(\"2\");\n    count.should.eql(1);\n  });\n});\n"]}