{"version":3,"sources":["../../src/packrattle/debug_graph.js"],"names":[],"mappings":"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","file":"debug_graph.js","sourcesContent":["\"use strict\";\n\n// pretend like js has a collections library.\nfunction exists(array, f) {\n  for (let i = 0; i < array.length; i++) if (f(array[i])) return true;\n  return false;\n}\n\n/*\n * debug the parser by plotting a directed graph of parse nodes as it works\n * on a string.\n */\nexport default class DebugGraph {\n  constructor() {\n    this.nodes = {};\n    this.edges = [];\n    this.success = false;\n    this.failure = false;\n  }\n\n  addEdge(from, to) {\n    this.edges.push({ from, to });\n    if (this.nodes[from]) this.nodes[from].children.push(to);\n    if (this.nodes[to]) this.nodes[to].parents.push(from);\n    if (to == \"success\") this.success = true;\n    if (to == \"failure\") this.failure = true;\n  }\n\n  addNode(name, parser, span) {\n    const node = { parser, span, parents: [], children: [] };\n    this.edges.forEach(edge => {\n      if (edge.from == name) node.children.push(edge.to);\n      if (edge.to == name) node.parents.push(edge.from);\n    });\n    this.nodes[name] = node;\n  }\n\n  markFailure(name) {\n    this.nodes[name].failure = true;\n  }\n\n  // filter out parsers with certain names\n  filterOut(...names) {\n    const nodesToRemove = [];\n\n    Object.keys(this.nodes).forEach(name => {\n      const node = this.nodes[name];\n      if (names.indexOf(node.parser.name) < 0) return;\n\n      const edgesToRemove = [];\n      // skip deleting a node that would make the graph bushier\n      if (node.parents.length > 1 && node.children.length > 1) return;\n\n      node.parents.forEach(p => {\n        edgesToRemove.push({ from: p, to: name });\n        if (this.nodes[p]) this.nodes[p].children = this.nodes[p].children.filter(c => c != name);\n      });\n      node.children.forEach(c => {\n        edgesToRemove.push({ from: name, to: c });\n        if (this.nodes[c]) this.nodes[c].parents = this.nodes[c].parents.filter(p => p != name);\n      });\n      node.parents.forEach(p => {\n        node.children.forEach(c => {\n          this.addEdge(p, c);\n        });\n      });\n      delete this.nodes[name];\n\n      this.edges = this.edges.filter(edge => !exists(edgesToRemove, e => e.from == edge.from && e.to == edge.to));\n    });\n  }\n\n  toDot(maxLength = 40) {\n    this.filterOut(\"map\", \"filter\", \"drop\", \"optional\");\n\n    const data = [\n      \"digraph packrattle {\",\n      \"  node [fontname=Courier];\"\n    ];\n    data.push(\"\");\n    this.edges.forEach(edge => {\n      data.push(`  \"${edge.from}\" -> \"${edge.to}\";`);\n    });\n    data.push(\"\");\n    Object.keys(this.nodes).forEach(name => {\n      const node = this.nodes[name];\n      if (!node.parser) return;\n      let description = node.parser.inspect();\n      if (description.length > maxLength) description = description.slice(0, maxLength) + \"...\";\n      description = description.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\");\n      const around = node.span.around(4).replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\");\n      const label = `label=\"@${node.span.start}: ${description}\\\\n'${around}'\"`;\n      const style = node.failure ? [ \"style=filled\", \"fillcolor=pink\" ] : [];\n      const attrs = [ label, \"shape=rect\" ].concat(style).join(\", \");\n      data.push(`  \"${name}\" [${attrs}];`);\n    });\n    data.push(\"\");\n    data.push(\"  \\\"start\\\" [shape=circle, style=filled, fillcolor=yellow];\");\n    if (this.success) data.push(\"  \\\"success\\\" [shape=rect, style=filled, fillcolor=green];\");\n    if (this.failure) data.push(\"  \\\"failure\\\" [shape=rect, style=filled, fillcolor=red];\");\n    data.push(\"}\");\n    return data.join(\"\\n\") + \"\\n\";\n  }\n}\n"]}