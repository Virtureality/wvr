{"version":3,"sources":["../src/test_seq.js"],"names":[],"mappings":"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","file":"test_seq.js","sourcesContent":["\"use strict\";\n\nconst pr = require(\"../../lib\");\nconst util = require(\"util\");\n\nrequire(\"should\");\nrequire(\"source-map-support\").install();\n\ndescribe(\"Parser.seq\", () => {\n  it(\"strings together a chained sequence\", () => {\n    const p = pr.seq(\n      pr.string(\"abc\"),\n      pr.string(\"123\").drop(),\n      pr.string(\"xyz\")\n    );\n    const rv = p.execute(\"abc123xyz\");\n    rv.state.pos.should.equal(9);\n    rv.value.should.eql([ \"abc\", \"xyz\" ]);\n  });\n\n  it(\"can lazily chain a sequence\", () => {\n    let hits = 0;\n    const p = pr.seq(\n      () => {\n        hits += 1;\n        return pr.string(\"abc\");\n      },\n      () => {\n        hits += 1;\n        return pr.string(\"123\").drop();\n      },\n      () => {\n        hits += 1;\n        return pr.string(\"xyz\");\n      }\n    );\n\n    hits.should.equal(0);\n    const rv = p.execute(\"abc123xyz\");\n    hits.should.equal(3);\n    rv.state.pos.should.equal(9);\n    rv.value.should.eql([ \"abc\", \"xyz\" ]);\n  });\n\n  it(\"can sequence optional elements\", () => {\n    const p = pr([ \"abc\", pr.optional(/\\d+/), \"xyz\" ]);\n    let rv = p.execute(\"abcxyz\");\n    rv.state.pos.should.equal(6);\n    rv.value.should.eql([ \"abc\", \"xyz\" ]);\n    rv = p.execute(\"abc99xyz\");\n    rv.state.pos.should.equal(8);\n    rv.value[0].should.eql(\"abc\");\n    rv.value[1][0].should.eql(\"99\");\n    rv.value[2].should.eql(\"xyz\");\n  });\n\n  it(\"skips a dropped element at the end\", () => {\n    const p = pr([ \"abc\", pr.optional(/\\d+/).drop(), pr.optional(/\\w+/).drop() ]);\n    let rv = p.execute(\"abcj\");\n    rv.state.pos.should.equal(4);\n    rv.value.should.eql([ \"abc\" ]);\n    rv = p.execute(\"abc99\");\n    rv.state.pos.should.equal(5);\n    rv.value.should.eql([ \"abc\" ]);\n  });\n\n  it(\"skips whitespace inside seqIgnore()\", () => {\n    const p = pr.seqIgnore(/\\s+/, \"abc\", \"xyz\", \"ghk\");\n    let rv = p.execute(\"abcxyzghk\");\n    rv.ok.should.equal(true);\n    rv.value.should.eql([ \"abc\", \"xyz\", \"ghk\" ]);\n    rv = p.execute(\"   abc xyz\\tghk\");\n    rv.ok.should.equal(true);\n    rv.value.should.eql([ \"abc\", \"xyz\", \"ghk\" ]);\n  });\n\n  it(\"skips whitespace lazily\", () => {\n    let hits = 0;\n    const p = pr.seqIgnore(\n      () => {\n        hits += 1;\n        return /\\s+/;\n      },\n      () => {\n        hits += 1;\n        return pr.string(\"abc\");\n      },\n      () => {\n        hits += 1;\n        return pr.string(\"xyz\");\n      },\n      () => {\n        hits += 1;\n        return pr.string(\"ghk\");\n      }\n    );\n    hits.should.equal(0);\n    const rv = p.execute(\"   abc xyz\\tghk\");\n    hits.should.equal(4);\n    rv.ok.should.equal(true);\n    rv.value.should.eql([ \"abc\", \"xyz\", \"ghk\" ]);\n  });\n\n  it(\"handles regexen in a sequence\", () => {\n    const p = pr.seq(/\\s*/, \"if\");\n    let rv = p.execute(\"   if\");\n    rv.ok.should.eql(true);\n    rv.state.pos.should.equal(5);\n    rv.value[0][0].should.eql(\"   \");\n    rv.value[1].should.eql(\"if\");\n    rv = p.execute(\"if\");\n    rv.ok.should.eql(true);\n    rv.state.pos.should.equal(2);\n    rv.value[0][0].should.eql(\"\");\n    rv.value[1].should.eql(\"if\");\n    rv = p.execute(\";  if\");\n    rv.ok.should.eql(false);\n    rv.state.pos.should.equal(0);\n    rv.value.should.match(/if/);\n  });\n});\n"]}